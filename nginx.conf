server {
    listen 80;
    server_name localhost;
    
    # Servir archivos estáticos directamente
    location / {
        proxy_pass http://main-app:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_cookie_path / "/; secure; SameSite=lax"; 
    }
    
    # Rutas para demostrar separación potencial en microservicios
    location /auth/ {
        proxy_pass http://main-app:3000/auth/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_cookie_path / "/; secure; SameSite=lax"; 
        add_header X-Service-Name "auth-service" always;
    }
    
    location /api/ {
        proxy_pass http://main-app:3000/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_cookie_path / "/; secure; SameSite=lax"; 
        add_header X-Service-Name "api-service" always;
    }
    
    # Endpoint para revisar salud de conexión
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}